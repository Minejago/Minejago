plugins {
    id 'org.quiltmc.loom' version '1.2.+'
    id 'maven-publish'
}

archivesBaseName = "${mod_id}-common-${minecraft_version}"

loom {
    runConfigs.configureEach {
        ideConfigGenerated = false
    }

    accessWidenerPath = file("src/main/resources/minejago.accesswidener")
}

configurations {
    testCompileOnly.extendsFrom(compileOnly)
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment "org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip"
    }

    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly "org.quiltmc:quilt-loader:${quilt_loader_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    compileOnly group:'org.spongepowered', name:'mixin', version:"${mixin_version}"

    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-${minecraft_version}:${sbl_version}"
    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-common:${forgeconfigapiport_version}"
    modImplementation "com.klikli_dev:modonomicon-${minecraft_version}-common:${modonomicon_version}"
    modImplementation "net.tslat.tes:TES-common-${minecraft_version}:${tes_version}"

    modCompileOnly "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}"
    modCompileOnly "dev.kosmx.player-anim:player-animation-lib:${playeranimator_version}"
    modCompileOnly "dev.kosmx.player-anim:anim-core:${playeranimator_version}"
    modCompileOnly "maven.modrinth:jade:${jade_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-forge:$rei_version"
    modCompileOnly "maven.modrinth:moonlight:${moonlight_version}-fabric"
    modCompileOnly "maven.modrinth:lambdynamiclights:${lambdynamiclights_version}"
}

sourceSets.main.resources.srcDir './src/generated/resources'

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
    }
}