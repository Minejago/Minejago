buildscript {
    repositories {
        maven { url = 'https://maven.parchmentmc.org' }
        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }
    }
}

plugins {
    id 'org.quiltmc.loom' version '1.1.+'
    id 'maven-publish'
}

archivesBaseName = "${mod_name}-common-${minecraft_version}"

repositories {
    maven {
        name = 'Forge / Mixin'
        url = 'https://maven.minecraftforge.net'
    }
}

loom {
    runConfigs.configureEach {
        ideConfigGenerated = false
    }

    accessWidenerPath = file("src/main/resources/minejago.accesswidener")
}

configurations {
    testCompileOnly.extendsFrom(compileOnly)
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }

    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly("org.quiltmc:quilt-loader:${quilt_loader_version}")

    compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'

    modCompileOnly "dev.kosmx.player-anim:player-animation-lib:${playeranimator_version}"
    modCompileOnly "dev.kosmx.player-anim:anim-core:${playeranimator_version}"
    modCompileOnly "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}"
    modCompileOnly "maven.modrinth:moonlight:${moonlight_version}"
    modCompileOnly("curse.maven:configured-667378:${configured_fabric_id}")
    modCompileOnly "maven.modrinth:jade:${jade_version}"
    modCompileOnly "com.klikli_dev:modonomicon:${modonomicon_version}" // TODO: update mcon when ml
    modCompileOnly "maven.modrinth:trimmed:${trimmed_version}+fabric"

    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-common:${forgeconfigapiport_version}"
    modImplementation("dev.thomasglasser.sherdsapi:sherdsapi-common-${minecraft_version}:${sherdsapi_version}")
    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-${previous_minecraft_version}:${sbl_version}"
    modImplementation "net.tslat.tes:TES-common-${minecraft_version}:${tes_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
}

sourceSets.main.resources.srcDir './src/generated/resources'

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
    }
}