plugins {
    id 'fabric-loom' version "${loom_version}" apply(false)
}

subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        maven {
            name = 'Parchment'
            url = 'https://maven.parchmentmc.org'
            content {
                includeGroupAndSubgroups 'org.parchmentmc.data'
            }
        }
        maven {
            name = "Forge Config API Port"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
            content {
                includeGroupAndSubgroups 'fuzs.forgeconfigapiport'
            }
        }
        maven {
            name = "SmartBrainLib"
            url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
            content {
                includeGroupAndSubgroups 'net.tslat.smartbrainlib'
            }
        }
        maven {
            name = "TslatEntityStatus"
            url = "https://dl.cloudsmith.io/public/tslat/tes/maven/"
            content {
                includeGroupAndSubgroups 'net.tslat.tes'
            }
        }
        maven {
            name = 'Modonomicon'
            url "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
            content {
                includeGroupAndSubgroups "com.klikli_dev"
            }
        }
        maven {
            name "playerAnimator"
            url 'https://maven.kosmx.dev/'
            content {
                includeGroupAndSubgroups 'dev.kosmx.player-anim'
            }
        }
        maven {
            name = 'GeckoLib'
            url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
            content {
                includeGroupAndSubgroups 'software.bernie.geckolib'
                includeGroupAndSubgroups 'com.eliotlash.mclib'
            }
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroupAndSubgroups 'maven.modrinth'
            }
        }
        maven {
            name = "CurseMaven"
            url "https://cursemaven.com"
            content {
                includeGroupAndSubgroups 'curse.maven'
            }
        }
        maven {
            name = "Cloth Config"
            url "https://maven.shedaniel.me/"
            content {
                includeGroupAndSubgroups 'me.shedaniel'
                includeGroupAndSubgroups 'dev.architectury'
            }
        }
        maven {
            name = "Cardinal Components API"
            url = 'https://maven.ladysnake.org/releases'
            content {
                includeGroupAndSubgroups 'dev.onyxstudios.cardinal-components-api'
            }
        }
        maven {
            name = "Reach Entity Attributes"
            url "https://maven.jamieswhiteshirt.com/libs-release"
            content {
                includeGroupAndSubgroups "com.jamieswhiteshirt"
            }
        }
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
            content {
                includeGroupAndSubgroups 'net.fabricmc.fabric-api'
            }
        }
        maven {
            name = "JEI"
            url = "https://maven.blamejared.com/"
            content {
                includeGroupAndSubgroups 'mezz.jei'
            }
        }
        maven {
            name = "Spruce UI"
            url 'https://maven.gegy.dev'
            content {
                includeGroupAndSubgroups 'dev.lambdaurora'
            }
        }
        maven {
            name = "Mod Menu"
            url 'https://maven.terraformersmc.com/releases'
            content {
                includeGroupAndSubgroups 'com.terraformersmc'
            }
        }
        maven {
            name = "Common Networking"
            url = "https://jm.gserv.me/repository/maven-public/"
            content {
                includeGroupAndSubgroups "mysticdrew"
            }
        }
        maven {
            name = "Mixin Extras"
            url = "https://jitpack.io/"
            content {
                includeGroupAndSubgroups 'com.github.llamalad7.mixinextras'
            }
        }
        maven {
            name = "TslatEffectsLib"
            url = "https://dl.cloudsmith.io/public/tslat/tel/maven/"
            content {
                includeGroupAndSubgroups "net.tslat.effectslib"
            }
        }

        // Non-specific
        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }
        maven {
            name = 'Mojang and Mixins'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenLocal()
    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}